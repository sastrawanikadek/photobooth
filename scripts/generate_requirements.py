from pathlib import Path

from server.managers.components.models import ComponentManifest
from server.utils.helpers.module import import_module_by_path

COMPONENTS_PATH = Path("server", "components")
REQUIREMENT_PATH = Path("requirements-components.txt")

with open(REQUIREMENT_PATH, "w") as f:
    f.write("# This file is automatically generated. Do not edit.\n")

    components = sorted(
        [
            component
            for component in COMPONENTS_PATH.iterdir()
            if component.is_dir() and not component.name.startswith("_")
        ],
        key=lambda x: x.name,
    )

    for component in components:
        module = import_module_by_path(component / "manifest")

        if module is None or not hasattr(module, "__MANIFEST__"):
            continue

        if not isinstance(module.__MANIFEST__, ComponentManifest):
            continue

        requirements = module.__MANIFEST__.requirements

        if not requirements:
            continue

        f.write(f"\n# {component.name}\n")
        for package, version in requirements.items():
            f.write(f"{package}=={version}\n")
